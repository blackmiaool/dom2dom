{"version":3,"file":"dom2dom.js","sources":["../index.js"],"sourcesContent":["export function squareSumSqrt(a, b) {\n    return Math.sqrt(a * a + b * b);\n}\nexport function getBoundingRect(dom) {\n    const rect = dom.getBoundingClientRect();\n    rect.x += rect.width / 2;\n    rect.y += rect.height / 2;\n    return rect;\n}\nexport function makeBias(pos, len, angle) {\n    pos.x += len * Math.cos(angle);\n    pos.y += len * Math.sin(angle);\n}\nexport default class D2D {\n    constructor({ from, to ,arrowOptions}={}) {\n        this.arrowOptions=Object.assign({\n            strokeStyle:'#555',\n            lineWidth:3,\n        },arrowOptions);\n        const canvas = document.createElement(\"canvas\");\n        document.body.appendChild(canvas);\n        canvas.style = \"position:fixed;left:0;right:0;top:0;bottom:0;height:100%;width:100%;pointer-events:none;\"\n        canvas.height = document.documentElement.offsetHeight;\n        canvas.width = document.documentElement.offsetWidth;\n        // canvas.width=\"10vh\";\n        const ctx = canvas.getContext('2d');\n        this.from = from;\n        this.to = to;\n        function sumSqrt(a, b) {\n            return Math.sqrt(a * a + b * b);\n        }\n\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.update();\n    }\n    destroy(){\n        document.body.removeChild(this.canvas);\n        this.destroyed=true;\n    }\n    update() {\n        if(this.destroyed){\n            return ;\n        }\n        this.draw();\n        requestAnimationFrame(this.update.bind(this));\n    }\n    draw() {\n        const canvas = this.canvas;\n        const ctx = this.ctx;\n        const arrowRect = {\n            from: getBoundingRect(this.from), to: getBoundingRect(this.to)\n        };\n\n\n        if (JSON.stringify(this.preArrowRect) === JSON.stringify(arrowRect)) {\n            return;\n        }\n        canvas.height = document.documentElement.offsetHeight;\n        canvas.width = document.documentElement.offsetWidth;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        \n        this.drawArrow(arrowRect);\n        this.preArrowRect = arrowRect;\n    }\n    drawArrow({ to, from }) {\n        const ctx = this.ctx;\n        const tailY = 20;\n\n        let toP, fromP;\n        toP = JSON.parse(JSON.stringify(to));\n        fromP = JSON.parse(JSON.stringify(from));\n        \n        const angle = Math.atan2((toP.y - fromP.y), (toP.x - fromP.x));\n        const tan=Math.tan(angle);\n        const sin=Math.sin(angle);\n        const cos=Math.cos(angle);\n        \n        function getLineWidth() {     \n            const h=fromP.height/2;\n            const w=fromP.width/2;           \n            let biasY = Math.abs(tailY / tan * sin);\n\n            const ratio = (biasY + h) / biasY;\n            return Math.abs(tailY / tan * ratio);\n        }\n        function getLineCorner(){\n            const h=fromP.height/2;\n            const w=fromP.width/2; \n\n            const X=h/Math.abs(cos);\n            const ratio=(w+Math.abs(sin*X))/X;\n            return h*ratio;\n        }\n        function getLineHeight(){\n            let biasX = Math.abs(tailY * tan * cos);\n\n            const ratio = (biasX + from.width / 2) / biasX;\n            return Math.abs(tailY * tan * ratio);\n        }\n\n        function getTargetDis(){\n            const h=toP.height/2;\n            const w=toP.width/2;\n            const angles=[Math.atan2(h,w),Math.atan2(h,-w),Math.atan2(-h,-w),Math.atan2(-h,w)];\n\n            if((angle>=angles[0]&&angle<angles[1])||(angle>=angles[2]&&angle<angles[3])){\n                return Math.abs(h/sin);\n            }else{\n                return Math.abs(w/cos);\n            }\n        }\n        makeBias(fromP, Math.min(getLineWidth(),getLineCorner(),getLineHeight()), angle);\n        makeBias(toP,getTargetDis(),Math.PI+angle);\n\n        ctx.strokeStyle=this.arrowOptions.strokeStyle;\n        ctx.translate(toP.x, toP.y);\n        ctx.rotate(Math.PI + angle)\n        ctx.beginPath();\n        ctx.lineWidth = this.arrowOptions.lineWidth;\n        // ctx.lineTo(from.x+from.width/2,from.y+from.height/2);\n        // ctx.lineTo(to.x+to.width/2,to.y+to.height/2);\n        const x1 = 30;\n        const y1 = 20;\n        const x2 = 25;\n        const y2 = 5;\n\n        const tailX = squareSumSqrt(toP.x - fromP.x, toP.y - fromP.y);\n        ctx.moveTo(0, 0);\n        ctx.lineTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.moveTo(x2, -y2);\n        ctx.lineTo(x1, -y1);\n        ctx.lineTo(0, 0);\n        ctx.lineTo(x1, y1);\n        ctx.stroke();\n\n\n        ctx.beginPath();\n        ctx.moveTo(x2, y2);\n        ctx.lineTo(tailX, tailY);\n        ctx.lineTo(tailX, -tailY);\n        ctx.lineTo(x2, -y2);\n        ctx.stroke();\n    }\n}\n"],"names":["getBoundingRect","dom","const","rect","getBoundingClientRect","x","width","y","height","makeBias","pos","len","angle","Math","cos","sin","D2D","ref","from","to","arrowOptions","Object","assign","canvas","document","createElement","body","appendChild","style","documentElement","offsetHeight","offsetWidth","ctx","getContext","update","destroy","removeChild","this","destroyed","draw","bind","arrowRect","JSON","stringify","preArrowRect","clearRect","drawArrow","toP","fromP","tailY","parse","biasX","h","biasY","atan2","tan","min","abs","w","X","getLineCorner","angles","getTargetDis","PI","strokeStyle","translate","rotate","beginPath","lineWidth","a","b","tailX","sqrt","moveTo","lineTo","stroke"],"mappings":"AAGA,SAAgBA,EAAgBC,GAC5BC,IAAMC,EAAOF,EAAIG,wBAGjB,OAFAD,EAAKE,GAAKF,EAAKG,MAAQ,EACvBH,EAAKI,GAAKJ,EAAKK,OAAS,EACjBL,EAEX,SAAgBM,EAASC,EAAKC,EAAKC,GAC/BF,EAAIL,GAAKM,EAAME,KAAKC,IAAIF,GACxBF,EAAIH,GAAKI,EAAME,KAAKE,IAAIH,GAE5B,IAAqBI,EACjB,SAAYC,0BAAEC,SAAMC,YACXC,aAAaC,OAAOC,oBACT,iBACF,uBAERC,EAASC,SAASC,cAAc,mBAC7BC,KAAKC,YAAYJ,KACnBK,MAAQ,6FACRpB,OAASgB,SAASK,gBAAgBC,eAClCxB,MAAQkB,SAASK,gBAAgBE,gBAElCC,EAAMT,EAAOU,WAAW,WACzBf,KAAOA,OACPC,GAAKA,OAKLI,OAASA,OACTS,IAAMA,OACNE,sBAETC,4BACaT,KAAKU,YAAYC,KAAKd,aAC1Be,WAAU,eAEnBJ,kBACOG,KAAKC,iBAGHC,6BACiBF,KAAKH,OAAOM,KAAKH,qBAE3CE,oBACUhB,EAASc,KAAKd,OACdS,EAAMK,KAAKL,IACXS,QACIzC,EAAgBqC,KAAKnB,SAAWlB,EAAgBqC,KAAKlB,KAI3DuB,KAAKC,UAAUN,KAAKO,gBAAkBF,KAAKC,UAAUF,OAGlDjC,OAASgB,SAASK,gBAAgBC,eAClCxB,MAAQkB,SAASK,gBAAgBE,cACpCc,UAAU,EAAG,EAAGtB,EAAOjB,MAAOiB,EAAOf,aAEpCsC,UAAUL,QACVG,aAAeH,gBAExBK,mBAAU7B,OAIF8B,EAAKC,EAJG9B,SACNc,EAAMK,KAAKL,IACXiB,EAAQ,KAGRP,KAAKQ,MAAMR,KAAKC,mBACdD,KAAKQ,MAAMR,KAAKC,UAAUzB,QAwB1BiC,EAhBEC,EAEFC,EARFzC,EAAQC,KAAKyC,MAAOP,EAAIxC,EAAIyC,EAAMzC,EAAKwC,EAAI1C,EAAI2C,EAAM3C,GACrDkD,EAAI1C,KAAK0C,IAAI3C,GACbG,EAAIF,KAAKE,IAAIH,GACbE,EAAID,KAAKC,IAAIF,KAoCVoC,EAAOnC,KAAK2C,KAjCXJ,EAAEJ,EAAMxC,OAAO,EAEjB6C,EAAQxC,KAAK4C,IAAIR,EAAQM,EAAMxC,GAG5BF,KAAK4C,IAAIR,EAAQM,IADTF,EAAQD,GAAKC,oBAItBD,EAAEJ,EAAMxC,OAAO,EACfkD,EAAEV,EAAM1C,MAAM,EAEdqD,EAAEP,EAAEvC,KAAK4C,IAAI3C,UAEZsC,IADMM,EAAE7C,KAAK4C,IAAI1C,EAAI4C,IAAIA,GAqBIC,IAjBhCT,EAAQtC,KAAK4C,IAAIR,EAAQM,EAAMzC,GAG5BD,KAAK4C,IAAIR,EAAQM,IADTJ,EAAQjC,EAAKZ,MAAQ,GAAK6C,MAe6BvC,KACjEmC,iBAXCK,EAAEL,EAAIvC,OAAO,EACbkD,EAAEX,EAAIzC,MAAM,EACZuD,GAAQhD,KAAKyC,MAAMF,EAAEM,GAAG7C,KAAKyC,MAAMF,GAAGM,GAAG7C,KAAKyC,OAAOF,GAAGM,QAAQJ,OAAOF,EAAEM,WAE3E9C,GAAOiD,EAAO,IAAIjD,EAAMiD,EAAO,IAAMjD,GAAOiD,EAAO,IAAIjD,EAAMiD,EAAO,GAC7DhD,KAAK4C,IAAIL,EAAErC,GAEXF,KAAK4C,IAAIC,EAAE5C,GAIbgD,GAAejD,KAAKkD,GAAGnD,KAEhCoD,YAAY3B,KAAKjB,aAAa4C,cAC9BC,UAAUlB,EAAI1C,EAAG0C,EAAIxC,KACrB2D,OAAOrD,KAAKkD,GAAKnD,KACjBuD,cACAC,UAAY/B,KAAKjB,aAAagD,cAvHZC,EAAGC,EA+HnBC,GA/HgBF,EA+HMtB,EAAI1C,EAAI2C,EAAM3C,EA/HjBiE,EA+HoBvB,EAAIxC,EAAIyC,EAAMzC,EA9HxDM,KAAK2D,KAAKH,EAAIA,EAAIC,EAAIA,MA+HrBG,OAAO,EAAG,KACVC,OAPO,GACA,MAOPA,OANO,GACA,KAMPD,OAPO,IACA,KAOPC,OAVO,IACA,MAUPA,OAAO,EAAG,KACVA,OAZO,GACA,MAYPC,WAGAR,cACAM,OAfO,GACA,KAePC,OAAOH,EAAOtB,KACdyB,OAAOH,GAAQtB,KACfyB,OAlBO,IACA,KAkBPC"}